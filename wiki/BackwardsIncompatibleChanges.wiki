#summary Backwards incompatible changes for the Pinax project.
#labels Featured

= Backwards Incompatible Changes =

== 0.5 ==

This wiki page indicates the changes to the source code that are backward incompatible. Keep a close eye to this page if you follow the development of Pinax. Stable releases will always contain a change log showing any big changes you must be aware of. This is where they will come from.

=== r887 (September 18, 2008) ===

In r887 we moved `site-packages/` to `external_libs/` and `apps/` to `external_apps/`. We have properly updated `manage.py` to work with this change, but if you are using Pinax in another environment such as mod_python or mod_wsgi, you will need to adjust the `PYTHONPATH` that you set there to reflect this change.

In some cases the `apps/` directory is not removed by Subversion. If you still have an `apps/` directory in your Pinax tree, you should `rm -rf` that directory.

=== r890 and r895 (September 18, 2008) ===

Similar to r887, in r890 we moved `pinax/local_apps/` up a directory and renamed it to `local_apps/`. In r895 we split apps that are core specific and moved them to `core_apps`. The apps moved are:

 * about
 * friends_app
 * games
 * photos
 * tag_app

=== r908 (September 20, 2008) ===

In order to deal with a naming clash, the internal 'things' app was renamed to 'things_app'.  This change is due to the fact that we will be integrating the external django-things project, which requires the app to be named 'things'.  This _should_ not affect anyone, but we list it because sometimes old files can stick around and this would be high on the suspect list.

*UPDATE*: If you get a `'module' object has no attribute 'ModelThing'` the most likely cause is the old `things` app under local_apps needs to be deleted. SVN leaves things lying around in sandbox even after they've gone from repos.

=== r915 (September 21, 2008) ===

The introduction of the 'things' app also required changes in the URL configuration of the 'tribes' and 'projects' app. Most notably this affects permalinks of `Project` and `Tribe` instances that might have been saved in notifications and could have been sent out via e-mail to your users.

To compensate this change please change the `urls.py` in your Pinax root directory so it looks like the snippet below. That will redirect to the correct URLs, if one of the old URLs are used:

{{{
from django.views.generic.simple import redirect_to
# ...
urlpatterns = patterns('',
    # ...
    (r'^tribes/(?P<slug>((?!create|your_tribes)\w+))/$', redirect_to, {'url': '/tribes/tribe/%(slug)s/'}),
    (r'^tribes/', include('tribes.urls')),
    (r'^projects/(?P<slug>((?!create|your_projects)\w+))/$', redirect_to, {'url': '/projects/project/%(slug)s/'}),
    (r'^projects/', include('projects.urls')),
    # ...
)
}}}

=== r943 through r953 (September 27, 2008) ===

I've split the account and other services information out of the `Profile` model into `Account` and `OtherServiceInfo` models under `account` app. Via signals, `Account`s should now be created whenever a `User` is. Furthermore, there is a new management command `create_accounts_from_profiles` that will migrate over the data from `Profile` to `Account` and `OtherServiceInfo`.

Not everything has been converted over to using the new models so any revisions in this range are likely unstable. r943 will work but the database will get out of sync once you run `create_accounts_from_profiles` as the code in that revision is still updating old model.

=== *SVN Move* (October 14, 2008) ====

We have officially moved our SVN hosting from Google Code to svn.pinaxproject.com. This isn't really a backward incompatible change as in things will start break, but executing `svn up` simply won't pull new changes. To continue to get updates we recommend you re-checkout the code base as follows:

{{{
svn checkout https://svn.pinaxproject.com/trunk pinax
}}}

We are now encouraging the use of the name `pinax` at the top-level. One of the reasons for the move is to reduce the confusion on what is django-hotclub and Pinax. There are also several other good reasons why we needed move and they will become apparent in the future.

Any changes below won't have URLs to the changeset as they are not in the Google code interface. We will be releasing a software management tool for Pinax soon.

=== Revision 1091 (October 18, 2008) ===

I have renamed  two plural models names in photos application (not photologue).  `Photos` is now named `Image` and `PhotoSets` is now named `PhotoSet`.  This change has been successfully tested against all related views and forms as well as the admin.

You need to perform a `./manage.py syncdb` after this change. Note that the database will still have the old model tables. You can safely remove them. Pinax never used them for anything. If you had any dependancy on them instead of doing a `syncdb` you can just rename the tables.

=== Revision 1093 and 1094 (October 18, 2008) ===

We have removed the `lifestream`, `locations`, `arcade` and `games` apps in time for 0.5.0rc1. The `locations` app will see a new life in the 0.6 release. If you have copied out your own project you will likely still have references to these apps in your `settings.py` and the top-level `urls.py`.

=== Revision 1103 (October 19, 2008) ===

The WSGI file that is in the complete_project has been renamed to `complete_project.wsgi`. It was previously named `pinax.wsgi`. This was inconsistent with general naming and the `basic_project` WSGI file that is named `basic_project.wsgi`. Be sure to update your Apache config if you relied on `pinax.wsgi`.

=== Revision 1108, 1109, 1110 (October 20, 2008) ===

`core_apps` was removed. This is important for those who copied out a complete_project or basic_project. Since you don't get updates there things will likely fail. They have been split up amongst their projects based on dependancies. You will need to pull down these changes to your project. Here is how you can get up to date:

{{{
cd /path/to/your_project
svn export http://svn.pinaxproject.com/pinax/branches/0.5.X/projects/complete_project/apps apps
svn export http://svn.pinaxproject.com/pinax/branches/0.5.X/projects/complete_project/manage.py
}}}

If you already have an `apps` directory at the top-level of your project and it is in `sys.path` then just merge in the upstream apps. They are:

complete_project:
 * `about`
 * `friends_app`
 * `tag_app`
 * `photos`

basic_project:
 * `about`

If you have made local modifications in your project to `manage.py` you will have to manually merge them. 

=== Revision 1126 (October 20, 2008) ===

We have changed settings.py to expect to import `local_settings.py` instead of `localsettings.py`. You need to simply rename any instances of `localsettings.py` to `local_settings.py` in any project that uses a local settings file to override any defaults.

== 0.7 ==

=== Revision 1093 (October 18, 2008) ===

The `crashlog` app was removed in favor of `djangodblog`. This is the original project by David Cramer. We have restored it. This only affects those who use or copied from the `complete_project`. If you have copied out your own project you will likely still have references to `crashlog` in your settings. It was in `INSTALLED_APPS` and `MIDDLEWARE_CLASSES`. `MIDDLEWARE_CLASSES` should have:

{{{
MIDDLEWARE_CLASSES = (
    ...
    'djangodblog.middleware.DBLogMiddleware',
    ...
)
}}}

=== Revision 1204 (November 13, 2008) ===

OpenID support underwent a bit of fixing. Before this change we had a forked branch from django-openid. They were in local_apps (django_openidauth and django_openidconsumer). They have been removed in favor of the trunk version of django-openid that was recently refactored by Simon Willison. It is now a standard external_app reference.

This change will require a patch apply and database schema change. There is a bug in django-openid that doesn't hook up the RequestContext. First begin by applying the patch:

{{{
cd apps/external_apps
patch -p0 < django_openid_requestcontext.diff
}}}

This has been reported as http://code.google.com/p/django-openid/issues/detail?id=22.

Due to the app name changing and being consolidated you will need to rename three tables if you have an existing database from before revision 1204. If you are able to drop existing tables, you can simply `syncdb` and remove the left over tables described in the migration SQL:

{{{
BEGIN;

# table renames
ALTER TABLE django_openidconsumer_nonce
    RENAME TO django_openid_nonce;
ALTER TABLE django_openidconsumer_association
    RENAME TO django_openid_association;
ALTER TABLE django_openidauth_useropenid
    RENAME TO django_openid_useropenidassociation;

# column modifications
ALTER TABLE django_openid_nonce
    ALTER server_url TYPE character varying(255);

COMMIT;
}}}

The above SQL should be used to migrate your existing database. This has only been tested on PostgreSQL. If you can provide versions for other databases we will gladly add it here.

There are some new templates you should be aware of. Inside both the basic and complete projects in their templates directory these are the additions:

{{{
account/
    password_set.html
    password_delete.html
    password_delete_done.html

django_openid/ (this is new)
    associations.html
    register.html
}}}

The django_openid templates are mostly copies from the older openid template directory, but have been slightly modified.
#summary Backwards incompatible changes for the Pinax project.
#labels Featured

= Backwards Incompatible Changes =

This wiki page indicates the changes to the source code that are backward incompatible. Keep a close eye to this page if you follow the development of Pinax. Stable releases will always contain a change log showing any big changes you must be aware of. This is where they will come from.

=== r887 (September 18, 2008) ===

In r887 we moved `site-packages/` to `external_libs/` and `apps/` to `external_apps/`. We have properly updated `manage.py` to work with this change, but if you are using Pinax in another environment such as mod_python or mod_wsgi, you will need to adjust the `PYTHONPATH` that you set there to reflect this change.

In some cases the `apps/` directory is not removed by Subversion. If you still have an `apps/` directory in your Pinax tree, you should `rm -rf` that directory.

=== r890 and r895 (September 18, 2008) ===

Similar to r887, in r890 we moved `pinax/local_apps/` up a directory and renamed it to `local_apps/`. In r895 we split apps that are core specific and moved them to `core_apps`. The apps moved are:

 * about
 * friends_app
 * games
 * photos
 * tag_app

=== r908 (September 20, 2008) ===

In order to deal with a naming clash, the internal 'things' app was renamed to 'things_app'.  This change is due to the fact that we will be integrating the external django-things project, which requires the app to be named 'things'.  This _should_ not affect anyone, but we list it because sometimes old files can stick around and this would be high on the suspect list.

=== r943 (September 27, 2008) ===

This shouldn't break anything yet (but will in a followup check in so wanted to give a heads up) 

I've split the account and other services information out of the `Profile` model into `Account` and `OtherServiceInfo` models under `account` app. Via signals, `Account`s should now be created whenever a `User` is. Furthermore, there is a new management command `create_accounts_from_profiles` that will migrate over the data from `Profile` to `Account` and `OtherServiceInfo`.

*However* nothing uses the new models yet and so deploying this revision will likely lead to those settings gettings out of sync if changed between now and when the second part of this change is committed.